{"changed":true,"filter":false,"title":"Untitled","tooltip":"/OJ/sortLinkedlist/Untitled","value":"#include \"stdafx.h\"\n#include <iostream>\n\nstruct ListNode {\n\tint val;\n\tListNode *next;\n\tListNode(int x) : val(x), next(NULL) {}\n};\n\nvoid insert(ListNode* head, int count, int* value) {\n\thead->val = *value++;\n\tListNode* now = head;\n\twhile (--count) {\n\t\tListNode* node = new ListNode(*value++);\n\t\tnow->next = node;\n\t\tnow = node;\n\t}\n}\n\nListNode* merge(ListNode* head1, ListNode* head2) {\n\tListNode dummy(0);\n\tListNode* head = &dummy;\n\tListNode* now = head;\n\twhile (head1 != NULL && head2 != NULL) {\n\t\tif (head1->val < head2->val) {\n\t\t\tnow->next = head1;\n\t\t\tnow = head1;\n\t\t\thead1 = head1->next;\n\t\t} else {\n\t\t\tnow->next = head2;\n\t\t\tnow = head2;\n\t\t\thead2 = head2->next;\n\t\t}\n\t}\n\tnow->next = head1 == NULL ? head2 : head1;\n\treturn head->next;\n}\n\nListNode* sortList(ListNode* head) {\n\tif (head == NULL || head->next == NULL) \n\t\treturn head;\n\tListNode* middle = head;\n\tListNode* end = head->next;\n\twhile (end != NULL && end->next != NULL) {\n\t\tmiddle = middle->next;\n\t\tend = end->next->next;\n\t}\n\tend = middle->next;\n\tmiddle->next = NULL;\n\treturn merge(sortList(head), sortList(end));\n}\n\nint _tmain(int argc, _TCHAR* argv[]) {\n\tint a[] = { 5, 4, 3, 2, 1, 0 };\n\tListNode *head = new ListNode(0);\n\tinsert(head, 6, a);\n\tListNode* newlist = sortList(head);\n\treturn 0;\n}\n","undoManager":{"mark":-2,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":59,"column":0},"action":"insert","lines":["#include \"stdafx.h\"","#include <iostream>","","struct ListNode {","\tint val;","\tListNode *next;","\tListNode(int x) : val(x), next(NULL) {}","};","","void insert(ListNode* head, int count, int* value) {","\thead->val = *value++;","\tListNode* now = head;","\twhile (--count) {","\t\tListNode* node = new ListNode(*value++);","\t\tnow->next = node;","\t\tnow = node;","\t}","}","","ListNode* merge(ListNode* head1, ListNode* head2) {","\tListNode dummy(0);","\tListNode* head = &dummy;","\tListNode* now = head;","\twhile (head1 != NULL && head2 != NULL) {","\t\tif (head1->val < head2->val) {","\t\t\tnow->next = head1;","\t\t\tnow = head1;","\t\t\thead1 = head1->next;","\t\t} else {","\t\t\tnow->next = head2;","\t\t\tnow = head2;","\t\t\thead2 = head2->next;","\t\t}","\t}","\tnow->next = head1 == NULL ? head2 : head1;","\treturn head->next;","}","","ListNode* sortList(ListNode* head) {","\tif (head == NULL || head->next == NULL) ","\t\treturn head;","\tListNode* middle = head;","\tListNode* end = head->next;","\twhile (end != NULL && end->next != NULL) {","\t\tmiddle = middle->next;","\t\tend = end->next->next;","\t}","\tend = middle->next;","\tmiddle->next = NULL;","\treturn merge(sortList(head), sortList(end));","}","","int _tmain(int argc, _TCHAR* argv[]) {","\tint a[] = { 5, 4, 3, 2, 1, 0 };","\tListNode *head = new ListNode(0);","\tinsert(head, 6, a);","\tListNode* newlist = sortList(head);","\treturn 0;","}",""],"id":1}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":59,"column":0},"end":{"row":59,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1435233614309}